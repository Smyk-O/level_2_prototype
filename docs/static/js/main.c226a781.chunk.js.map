{"version":3,"sources":["GetPromoText.js","CatFoodCatalog.js","App.js","registerServiceWorker.js","index.js"],"names":["GetPromoText","props","weight","react_default","a","createElement","className","CatFoodCatalog","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","catFoodSelected","id","SelectedId","indexOf","index","splice","push","setState","item","classProduct","_this2","concat","onClick","disabled","ProductSelected","typeName","src_GetPromoText","_this3","items","map","key","GetProductContent","endText","text","GetProduct","Component","App","src_CatFoodCatalog_0","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.c226a781.chunk.js","sourcesContent":["import React from 'react';\r\nimport './GetPromoText.css';\r\n\r\nfunction  GetPromoText(props) {\r\n\r\n    if (props.weight === '0,5') {\r\n        return (\r\n            <span className='productPromo'>\r\n                <b>10</b> порций мышь в подарок\r\n            </span>\r\n        );\r\n    }\r\n    if (props.weight === '2') {\r\n        return (\r\n            <span className='productPromo'>\r\n                <b>40</b> порций <b>2</b> мыши в подарок\r\n            </span>\r\n        );\r\n    }\r\n    return (\r\n        <span className='productPromo'>\r\n            <b>100</b> порций <b>5</b> мышей в подарок заказчик доволен\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default GetPromoText;","import React, { Component } from 'react';\r\nimport './CatFoodCatalog.css';\r\nimport GetPromoText from './GetPromoText'\r\n\r\nclass CatFoodCatalog extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            catFoodSelected: []\r\n        }\r\n    }\r\n\r\n    ProductSelected(id) {\r\n        const SelectedId = this.state.catFoodSelected;\r\n        if (SelectedId.indexOf(id) !== -1) {\r\n            let index = SelectedId.indexOf(id)\r\n            SelectedId.splice(index, 1);\r\n        }\r\n        else {\r\n            SelectedId.push(id)\r\n        }\r\n        this.setState({\r\n            catFoodSelected: SelectedId\r\n        })\r\n    }\r\n\r\n    GetProductContent(item, classProduct) {\r\n        return (\r\n            <div className={`product ${classProduct}`} onClick={() => { if (!item.disabled) { this.ProductSelected(item.typeName) } }}>\r\n                <div className='productText'>\r\n                    <p className='sloganHover'>Котэ не одобряет?</p>\r\n                    <p className='slogan'>Сказочное заморское яство</p>\r\n                    <h2>Нямушка</h2>\r\n                    <h3>{item.typeName}</h3>\r\n                    <p className='productPromo'><GetPromoText weight={item.weight} /></p>\r\n                </div>\r\n                <div className='weightCircle'><p className='weightNumber'>{item.weight}</p><br /><p className='weightUnit'>кг</p></div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    GetProduct() {\r\n\r\n        return this.props.items.map((item) => {\r\n            if (item.disabled) {\r\n                return (\r\n                    <div key={item.typeName} className='productUnit'>\r\n                        {this.GetProductContent(item, 'endProduct')}\r\n                        <div className='endProductInfo'>\r\n                            {item.endText}\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n            if (this.state.catFoodSelected.indexOf(item.typeName) !== -1) {\r\n                return (\r\n                    <div key={item.typeName} className='productUnit' >\r\n                        {this.GetProductContent(item, 'Selected')}\r\n                        <div className='productInfo'>\r\n                            {item.text}\r\n                        </div>\r\n                    </div >\r\n                );\r\n            }\r\n            return (\r\n                <div key={item.typeName} className='productUnit' >\r\n                    {this.GetProductContent(item, 'notSelected')}\r\n                    <div className='productInfo'>\r\n                        Чего сидишь? Порадуй котэ, <span className='buy' onClick={() => { this.ProductSelected(item.typeName) }}>купи.</span>\r\n                    </div>\r\n                </div>\r\n            );\r\n        })\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className='itemView'>\r\n                {this.GetProduct()};\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default CatFoodCatalog;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport CatFoodCatalog from './CatFoodCatalog'\r\n\r\nconst items = [];\r\n\r\nitems[0] = { typeName: 'с фуа-гра',text: 'Печень утки разварная с артишоками.', weight: '0,5', disabled: false, endText:'Печалька, с фуа-гра закончился.'};\r\nitems[1] = { typeName: 'с рыбой',text: 'Головы щучьи с чесноком да свежайшая сёмгушка.', weight: '2', disabled: false, endText:'Печалька, с рыбой закончился.'};\r\nitems[2] = { typeName: 'с курой',text: 'Филе из цыплят с трюфелями в бульоне.', weight: '5', disabled: true, endText:'Печалька, с курой закончился.'};\r\n\r\nclass App extends Component {\r\n  render() {\r\n\r\n    return (\r\n      <div className='content'>\r\n        <header>\r\n          <h1 className='header-text'>Ты сегодня покормил кота?</h1>\r\n        </header>\r\n        <CatFoodCatalog items={items} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n\twindow.location.hostname === 'localhost' ||\r\n\t// [::1] is the IPv6 localhost address.\r\n\twindow.location.hostname === '[::1]' ||\r\n\t// 127.0.0.1/8 is considered localhost for IPv4.\r\n\twindow.location.hostname.match(\r\n\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n\t)\r\n);\r\n\r\nexport default function register() {\r\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n\t\t// The URL constructor is available in all browsers that support SW.\r\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n\t\tif (publicUrl.origin !== window.location.origin) {\r\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\r\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\r\n\t\t\t// serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\twindow.addEventListener('load', () => {\r\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n\t\t\tif (isLocalhost) {\r\n\t\t\t\t// This is running on localhost. Lets check if a service worker still exists or not.\r\n\t\t\t\tcheckValidServiceWorker(swUrl);\r\n\r\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\r\n\t\t\t\t// service worker/PWA documentation.\r\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\r\n\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\r\n\t\t\t\t\t\t'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n\t\t\t\t\t);\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t// Is not local host. Just register service worker\r\n\t\t\t\tregisterValidSW(swUrl);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n\tnavigator.serviceWorker\r\n\t\t.register(swUrl)\r\n\t\t.then(registration => {\r\n\t\t\tregistration.onupdatefound = () => {\r\n\t\t\t\tconst installingWorker = registration.installing;\r\n\t\t\t\tinstallingWorker.onstatechange = () => {\r\n\t\t\t\t\tif (installingWorker.state === 'installed') {\r\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\r\n\t\t\t\t\t\t\t// At this point, the old content will have been purged and\r\n\t\t\t\t\t\t\t// the fresh content will have been added to the cache.\r\n\t\t\t\t\t\t\t// It's the perfect time to display a \"New content is\r\n\t\t\t\t\t\t\t// available; please refresh.\" message in your web app.\r\n\t\t\t\t\t\t\tconsole.log('New content is available; please refresh.');\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// At this point, everything has been precached.\r\n\t\t\t\t\t\t\t// It's the perfect time to display a\r\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\r\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tconsole.error('Error during service worker registration:', error);\r\n\t\t});\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n\t// Check if the service worker can be found. If it can't reload the page.\r\n\tfetch(swUrl)\r\n\t\t.then(response => {\r\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\r\n\t\t\tif (\r\n\t\t\t\tresponse.status === 404 ||\r\n\t\t\t\tresponse.headers.get('content-type').indexOf('javascript') === -1\r\n\t\t\t) {\r\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\r\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\r\n\t\t\t\t\tregistration.unregister().then(() => {\r\n\t\t\t\t\t\twindow.location.reload();\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t// Service worker found. Proceed as normal.\r\n\t\t\t\tregisterValidSW(swUrl);\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch(() => {\r\n\t\t\tconsole.log(\r\n\t\t\t\t'No internet connection found. App is running in offline mode.'\r\n\t\t\t);\r\n\t\t});\r\n}\r\n\r\nexport function unregister() {\r\n\tif ('serviceWorker' in navigator) {\r\n\t\tnavigator.serviceWorker.ready.then(registration => {\r\n\t\t\tregistration.unregister();\r\n\t\t});\r\n\t}\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}